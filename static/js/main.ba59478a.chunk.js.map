{"version":3,"sources":["icons/backend.svg","icons/devops.svg","icons/frontend.svg","icons/project_manager.svg","icons/qa.svg","data/home-page/ITProfessions.ts","icons/ux_ui.svg","layout/components/MainContainer.tsx","layout/components/NoMatch404.tsx","shared/components/ProfessionCard.tsx","detail-page/BackButton.tsx","data/detail-page/tabs/availableCategories.ts","data/detail-page/tabs/backend.ts","data/detail-page/tabs/devOps.ts","data/detail-page/tabs/frontend.ts","data/detail-page/tabs/projectManager.ts","data/detail-page/tabs/qa.ts","data/detail-page/tabs/uxUi.ts","detail-page/components/JobsTab.tsx","detail-page/components/LearnTab.tsx","detail-page/components/ResourcesTab.tsx","detail-page/components/tabs/Tab.tsx","detail-page/components/tabs/TabPanel.tsx","detail-page/components/tabs/Tabs.tsx","detail-page/DetailPage.tsx","data/detail-page/descriptions/frontend.ts","data/detail-page/descriptions/backend.ts","data/detail-page/descriptions/devOps.ts","data/detail-page/descriptions/projectManager.ts","data/detail-page/descriptions/qa.ts","data/detail-page/descriptions/uxUi.ts","home-page/components/Description.tsx","home-page/components/GridContainer.tsx","home-page/components/Header.tsx","home-page/HomePage.tsx","layout/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ITProfessions","id","title","description","color","icon","frontendIcon","route","backendIcon","qaIcon","devopsIcon","projectIcon","BackgroundContainer","styled","process","ContentContainer","Container","theme","spacing","breakpoints","up","MainContainer","children","maxWidth","CardWrapper","NoMatch404","history","useHistory","Typography","variant","Box","m","Button","onClick","push","StyledProfessionCard","Card","$isClickable","StyledCardHeader","CardHeader","StyledAvatar","Avatar","background","palette","professions","main","ProfessionCard","avatarSrc","avatarBackground","isClickable","subheader","src","BackButtonStyle","props","BackButton","display","gutterBottom","startIcon","availableCategories","learn","name","text","jobs","resources","backend","devOps","frontend","projectManager","qa","uxUi","JobsTab","content","LearnTab","ResourcesTab","StyledTab","MuiTab","Tab","chosenTab","index","handleClick","rest","label","className","TabPanel","getTabContent","syncTabWithPath","categoryId","useParams","useEffect","role","StyledTabs","MuiTabs","disabled","TabsContainer","tabList","categoryName","to","Tabs","professionId","useState","activeTab","setActiveTab","categories","getData","useRouteMatch","path","url","length","indicatorColor","value","map","category","tabIndex","handleTabClicked","exact","from","categoryIdFromPath","selectedCategoryIndex","findIndex","TabContainer","down","DetailPage","detailDescription","profession","find","p","DescriptionContainer","Description","GridContainer","HeaderTypography","Header","StyledLink","Link","HomePage","createBreakpoints","createMuiTheme","typography","fontFamily","h1","fontSize","body1","subtitle1","h4","primary","secondary","contrastText","uxui","devops","projectmanager","DefaultDetailsPagePath","App","StylesProvider","injectFirst","basename","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba59478a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backend.e5dd589a.svg\";","export default __webpack_public_path__ + \"static/media/devops.526c43b9.svg\";","export default __webpack_public_path__ + \"static/media/frontend.0cba3fe3.svg\";","export default __webpack_public_path__ + \"static/media/project_manager.1f0575de.svg\";","export default __webpack_public_path__ + \"static/media/qa.76467f02.svg\";","import backendIcon from '../../icons/backend.svg';\nimport devopsIcon from '../../icons/devops.svg';\nimport frontendIcon from '../../icons/frontend.svg';\nimport projectIcon from '../../icons/project_manager.svg';\nimport qaIcon from '../../icons/qa.svg';\nimport uxIcon from '../../icons/ux_ui.svg';\n\nexport type ProfessionKey = 'frontend' | 'backend' | 'uxui' | 'qa' | 'devops' | 'projectmanager';\n\nexport interface Profession {\n  id: ProfessionKey;\n  title: string;\n  description: string;\n  color: ProfessionKey;\n  icon: string;\n  route: ProfessionKey;\n}\n\nexport const ITProfessions: Profession[] = [\n  {\n    id: 'frontend',\n    title: 'Frontend',\n    description:\n      'A frontend engineer works on those parts of web apps you actually see',\n    color: 'frontend',\n    icon: frontendIcon,\n    route: 'frontend',\n  },\n  {\n    id: 'backend',\n    title: 'Backend',\n    description:\n      'A backend engineer handles communication between user and database, processes and saves data',\n    color: 'backend',\n    icon: backendIcon,\n    route: 'backend',\n  },\n  {\n    id: 'uxui',\n    title: 'UX/UI',\n    description:\n      'A UX/UI designs app to make them good-looking and user-friendly',\n    color: 'uxui',\n    icon: uxIcon,\n    route: 'uxui',\n  },\n  {\n    id: 'qa',\n    title: 'QA',\n    description: 'A QA tests software to detect any bugs and errors',\n    color: 'qa',\n    icon: qaIcon,\n    route: 'qa',\n  },\n  {\n    id: 'devops',\n    title: 'DevOps',\n    description:\n      'A DevOps creates and maintains infrastructure that software runs on',\n    color: 'devops',\n    icon: devopsIcon,\n    route: 'devops',\n  },\n  {\n    id: 'projectmanager',\n    title: 'Project Manager',\n    description:\n      'Project managers plan, monitor, control and organize projects',\n    color: 'projectmanager',\n    icon: projectIcon,\n    route: 'projectmanager',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/ux_ui.1e1dd114.svg\";","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Container } from '@material-ui/core';\n\n/* Main container with background img for all pages */\nconst BackgroundContainer = styled('div')`\n  background: url('${process.env.PUBLIC_URL}/img/background-img.png') center top / cover no-repeat;\n  min-height: 100vh;\n`;\n\nconst ContentContainer = styled(Container)`\n  padding: ${({ theme }) => theme.spacing(2, 0)};\n  width: 90%;\n\n  ${({ theme }) => theme.breakpoints.up('md')} {\n    padding: ${({ theme }) => theme.spacing(3, 0)};\n  }\n`;\n\nexport const MainContainer: React.FC<{}> = ({ children }) => (\n  <BackgroundContainer>\n    <ContentContainer maxWidth=\"md\">\n      { children! }\n    </ContentContainer>\n  </BackgroundContainer>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\nimport { Box, Button } from '@material-ui/core';\nimport { MainContainer } from './MainContainer';\n\nconst CardWrapper = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: auto;\n  min-height: 70vh;\n`;\n\nexport const NoMatch404: React.FC<{}> = () => {\n  const history = useHistory();\n\n  return (\n    <MainContainer>\n      <CardWrapper>\n        <Typography variant=\"h4\">404</Typography>\n        <Box m={2}>\n          <Typography variant=\"subtitle1\">It looks like you&apos;re lost.</Typography>\n        </Box>\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => history.push('/')}>Go to the homepage</Button>\n      </CardWrapper>\n    </MainContainer>\n  );\n};\n","import { Avatar, Card, CardHeader } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ProfessionKey } from '../../data/home-page/ITProfessions';\n\nconst StyledProfessionCard = styled(Card)<{ $isClickable: boolean }>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  cursor: ${({ $isClickable }) => ($isClickable ? 'pointer' : 'auto')};\n  :hover {\n    opacity: ${({ $isClickable }) => ($isClickable ? 0.8 : 1)};\n  }\n`;\n\nconst StyledCardHeader = styled(CardHeader)`\n  width: 100%;\n`;\n\nconst StyledAvatar = styled(Avatar)<{ background: ProfessionKey }>`\n  margin-right: 1em;\n  background-color: ${({ background, theme }) => theme.palette.professions[background].main};\n  padding: 0.35em;\n`;\n\ntype ProfessionCardProps = {\n  title: string;\n  description: string;\n  avatarSrc: string;\n  avatarBackground: ProfessionKey;\n  isClickable?: boolean;\n};\n\nexport const ProfessionCard: React.FC<ProfessionCardProps> = ({\n  title,\n  description,\n  avatarSrc,\n  avatarBackground,\n  isClickable = false,\n}) => (\n  <StyledProfessionCard $isClickable={isClickable}>\n    <StyledCardHeader title={title} subheader={description} />\n    <StyledAvatar src={avatarSrc} background={avatarBackground} />\n  </StyledProfessionCard>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst BackButtonStyle = styled(Button)`\nmargin: ${props => props.theme.spacing(2)}px 0;  \n`;\n\nexport const BackButton: React.FC<{}> = () => {\n  const history = useHistory();\n\n  return (\n    <Typography variant=\"button\" display=\"block\" gutterBottom>\n      <BackButtonStyle\n        startIcon={<ArrowBackIosIcon />}\n        onClick={() => history.push('/')}\n\n      >\n        Back\n      </BackButtonStyle>\n    </Typography>\n  );\n};\n","import { categoriesModel } from './tabsInterfaces';\n\nexport const availableCategories: categoriesModel = {\n  learn: {\n    id: 'learn',\n    name: 'learn',\n    text: 'What do I learn',\n  },\n  jobs: {\n    id: 'jobs',\n    name: 'jobs',\n    text: 'Jobs',\n  },\n  resources: {\n    id: 'resources',\n    name: 'resources',\n    text: 'Useful Resources',\n  },\n};\n","import { categoryId } from './tabsInterfaces';\n\nexport const backend: categoryId[] = ['learn', 'jobs', 'resources'];\n","import { categoryId } from './tabsInterfaces';\n\nexport const devOps: categoryId[] = ['learn', 'jobs', 'resources'];\n","import { categoryId } from './tabsInterfaces';\n\nexport const frontend: categoryId[] = ['learn', 'jobs', 'resources'];\n","import { categoryId } from './tabsInterfaces';\n\nexport const projectManager: categoryId[] = ['learn', 'jobs', 'resources'];\n","import { categoryId } from './tabsInterfaces';\n\nexport const qa: categoryId[] = ['learn', 'jobs', 'resources'];\n","import { categoryId } from './tabsInterfaces';\n\nexport const uxUi: categoryId[] = ['learn', 'jobs', 'resources'];\n","import React from 'react';\n\ninterface JobProps {\n  content: string;\n}\n\nexport const JobsTab: React.FC<JobProps> = ({ content }) => (\n  <div>\n    {/* Should be replace with actual content */}\n    {content}\n  </div>\n);\n","import React from 'react';\n\ninterface LearnProps {\n  content: string;\n}\n\nexport const LearnTab: React.FC<LearnProps> = ({ content }) => (\n  <div>\n    {/* Should be replace with actual content */}\n    {content}\n  </div>\n);\n","import React from 'react';\n\ninterface ResourcesProps {\n  content: string;\n}\n\nexport const ResourcesTab: React.FC<ResourcesProps> = ({ content }) => (\n  <div>\n    {/* Should be replace with actual content */}\n    {content}\n  </div>\n);\n","import React from 'react';\nimport { Tab as MuiTab, TabProps as MuiTabProps } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst StyledTab = styled(MuiTab)`\n  text-transform: none;\n  opacity: 1;\n\n  &.active {\n    font-weight: bold;\n  }\n`;\n\ntype TabProps = {\n  text: string;\n  chosenTab: number;\n  index: number;\n  handleClick: (index: number) => void;\n} & MuiTabProps;\n\nexport const Tab: React.FC<TabProps> = props => {\n  const {\n    text,\n    chosenTab,\n    index,\n    handleClick,\n    ...rest\n  } = props;\n  return (\n    <StyledTab\n      {...rest}\n      label={text}\n      className={chosenTab === index ? 'active' : ''}\n      onClick={() => handleClick(index)}\n    />\n  );\n};\n","import React, { ReactElement, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  getTabContent: (categoryId: string) => ReactElement;\n  syncTabWithPath: (categoryId: string) => void;\n}\n\nexport const TabPanel: React.FC<Props> = ({ getTabContent, syncTabWithPath }) => {\n  const { categoryId } = useParams<{ categoryId: string }>();\n  useEffect(() => {\n    syncTabWithPath(categoryId);\n  }, [categoryId, syncTabWithPath]);\n  return (\n    <div role=\"tabpanel\">\n      {getTabContent(categoryId)}\n    </div>\n  );\n};\n","import { Card, Tabs as MuiTabs } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Redirect, Route, Switch, useHistory, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { availableCategories } from '../../../data/detail-page/tabs/availableCategories';\nimport { backend, devOps, frontend, projectManager, qa, uxUi } from '../../../data/detail-page/tabs/index';\nimport { Category } from '../../../data/detail-page/tabs/tabsInterfaces';\nimport { ProfessionKey } from '../../../data/home-page/ITProfessions';\nimport { JobsTab } from '../JobsTab';\nimport { LearnTab } from '../LearnTab';\nimport { ResourcesTab } from '../ResourcesTab';\nimport { Tab } from './Tab';\nimport { TabPanel } from './TabPanel';\n\nconst StyledTabs = styled(MuiTabs)`\n  border-bottom: 1px solid\n    ${props => props.theme.palette.text.disabled};\n  color: inherit;\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst TabsContainer = styled(Card)`\n  width: 100%;\n`;\n\ninterface TabProps {\n  professionId: ProfessionKey;\n}\n\n/* Mock data until we determine the shape and place of tabs state */\nconst tabList = {\n  learn: 'What to learn',\n  jobs: 'jobs',\n  resources: 'resources',\n};\n\nconst getTabContent = (categoryName: String) => {\n  switch (categoryName) {\n    case 'jobs':\n      return <JobsTab content={tabList.jobs} />;\n    case 'learn':\n      return <LearnTab content={tabList.learn} />;\n    case 'resources':\n      return <ResourcesTab content={tabList.resources} />;\n    default:\n      return <Redirect to=\"/404\" />;\n  }\n};\n\nconst getData = (professionId: ProfessionKey) => {\n  switch (professionId) {\n    case 'frontend':\n      return frontend;\n    case 'backend':\n      return backend;\n    case 'devops':\n      return devOps;\n    case 'projectmanager':\n      return projectManager;\n    case 'qa':\n      return qa;\n    case 'uxui':\n      return uxUi;\n    default:\n      return [];\n  }\n};\n\nexport const Tabs: React.FC<TabProps> = ({ professionId }) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const categories = getData(professionId);\n\n  const { path, url } = useRouteMatch();\n  const history = useHistory();\n\n  const handleTabClicked = (category: Category, tabIndex: number) => {\n    setActiveTab(tabIndex);\n    history.push(`${url}/${category.name}`);\n  };\n  const syncTabWithPath = (categoryIdFromPath: string) => {\n    const selectedCategoryIndex = categories.findIndex(category => category === categoryIdFromPath);\n    const index = selectedCategoryIndex === -1 ? 0 : selectedCategoryIndex;\n    setActiveTab(index);\n  };\n\n  return (\n    <>\n      { (categories.length !== 0)\n      && (\n        <TabsContainer>\n          <StyledTabs indicatorColor=\"primary\" value={activeTab}>\n            {categories.map((category, index) => (\n              <Tab\n                key={availableCategories[category].name}\n                text={availableCategories[category].text}\n                chosenTab={activeTab}\n                index={index}\n                handleClick={(tabIndex: number) => handleTabClicked(availableCategories[category], tabIndex)}\n              />\n            ))}\n          </StyledTabs>\n          <Switch>\n            <Redirect exact from=\"/details/:professionId\" to={`${url}/learn`} />\n            <Route exact path={`${path}/:categoryId`}>\n              <TabPanel\n                getTabContent={getTabContent}\n                syncTabWithPath={syncTabWithPath}\n              />\n            </Route>\n          </Switch>\n        </TabsContainer>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { backend, devOps, frontend, projectManager, qa, uxUi } from '../data/detail-page/descriptions/index';\nimport { ITProfessions, ProfessionKey } from '../data/home-page/ITProfessions';\nimport { MainContainer } from '../layout/components/MainContainer';\nimport { NoMatch404 } from '../layout/components/NoMatch404';\nimport { ProfessionCard } from '../shared/components/ProfessionCard';\nimport { BackButton } from './BackButton';\nimport { Tabs } from './components/tabs/Tabs';\n\nexport const TabContainer = styled('div')`\n  width: 100%;\n  margin: ${({ theme }) => theme.spacing(4, 0, 0)};\n  padding-bottom: ${({ theme }) => theme.spacing(4)}px;\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    margin: ${({ theme }) => theme.spacing(3, 0, 0)};\n  }\n`;\n\nconst getData = (professionId: ProfessionKey) => {\n  switch (professionId) {\n    case 'frontend':\n      return frontend;\n    case 'backend':\n      return backend;\n    case 'devops':\n      return devOps;\n    case 'projectmanager':\n      return projectManager;\n    case 'qa':\n      return qa;\n    case 'uxui':\n      return uxUi;\n    default:\n      return '';\n  }\n};\n\nexport const DetailPage: React.FC<{}> = () => {\n  const { professionId } = useParams<{ professionId: ProfessionKey }>();\n  const detailDescription = getData(professionId);\n\n  const history = useHistory();\n\n  const profession = ITProfessions.find(p => p.id === professionId);\n\n  return (\n    <>\n      {(profession && detailDescription) ? (\n        <MainContainer>\n          <BackButton />\n          <ProfessionCard\n            key={profession.id}\n            title={profession.title}\n            description={detailDescription}\n            avatarSrc={profession.icon}\n            avatarBackground={profession.color}\n          />\n          <TabContainer>\n            <Tabs\n              professionId={professionId}\n            />\n          </TabContainer>\n        </MainContainer>\n      ) : <NoMatch404 />}\n    </>\n  );\n};\n","export const frontend = `Front-end web development, also known as client-side development is \nthe practice of producing HTML, CSS and JavaScript for a website or Web Application so that a \nuser can see and interact with them directly. The challenge associated with front end development \nis that the tools and techniques used to create the front end of a website change constantly and so \nthe developer needs to constantly be aware of how the field is developing.`;\n","// TODO: Add longer description\nexport const backend = 'A backend engineer handles communication between user and database, processes and saves data';\n","export const devOps = `A DevOps engineers combine knowledge about application coding, \n  'maintenance and management. They are responsible for deployment, monitoring and scaling \n  'duties necessary during releasing process. They also have in-depth knowledge about automatization, \n  'operating systems and strong programming skills.`;\n","// TODO: Add longer description\nexport const projectManager = 'Project managers plan, monitor, control and organize projects';\n","// TODO: Add longer description\nexport const qa = 'A QA tests software to detect any bugs and errors';\n","export const uxUi = `A UI/UX designer's job is to create user-friendly \n interfaces that enable users to understand how to use complex technical products. \n If you're passionate about the latest technology trends and devices, you'll find great \n fulfillment in being involved in the design process for the next hot gadget.`;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport styled, { css } from 'styled-components';\n\nconst DescriptionContainer = styled('div')`\n  text-align: center;\n  margin: ${({ theme }) => theme.spacing(4, 'auto', 0)};\n  *:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing(2)}px;\n  }\n\n  ${({ theme }) => theme.breakpoints.down('sm')} {\n    margin-top: ${({ theme }) => theme.spacing(3)}px;\n    width: 90%;\n  }\n`;\n\nexport const Description: React.FC<{}> = () => (\n  <DescriptionContainer>\n    <Typography>So you want to work in IT? Or you just curious about opportunities in the TECH world?</Typography>\n    <Typography>You&apos;re in the right place!</Typography>\n    <Typography>Explore the options below and decide which path works best for you.</Typography>\n  </DescriptionContainer>\n);\n","import styled from 'styled-components';\n\n/* Grid container for the main page */\nexport const GridContainer = styled('div')`\n    width: 100%;\n    display: grid;\n    margin: 2em auto 0;\n    padding-bottom: 2em;\n    grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));\n    grid-gap: 2em;\n\n    ${({ theme }) => theme.breakpoints.down('sm')} {\n      margin-top: 1.5em;\n    }\n`;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport styled, { css } from 'styled-components';\n\nconst HeaderTypography = styled(Typography)`\n  width: 80%;\n  text-align: center;\n  font-weight: bold;\n  padding-top: ${({ theme }) => theme.spacing(3)}px;\n  margin: auto;\n`;\n\nexport const Header: React.FC<{}> = () => (\n  <HeaderTypography variant=\"h1\">\n    Power up your transITion\n  </HeaderTypography>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ITProfessions } from '../data/home-page/ITProfessions';\nimport { MainContainer } from '../layout/components/MainContainer';\nimport { ProfessionCard } from '../shared/components/ProfessionCard';\nimport { Description } from './components/Description';\nimport { GridContainer } from './components/GridContainer';\nimport { Header } from './components/Header';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: stretch;\n  text-decoration: none;\n  :active {\n    color: inherit;\n  }\n`;\n\nexport const HomePage: React.FC<{}> = () => (\n  <MainContainer>\n    <Header />\n    <Description />\n    <GridContainer>\n      {ITProfessions.map(({ title, description, color, icon, id, route }) => (\n        <StyledLink to={`/details/${route}`} key={id}>\n          <ProfessionCard\n            isClickable\n            key={id}\n            title={title}\n            description={description}\n            avatarSrc={icon}\n            avatarBackground={color}\n          />\n        </StyledLink>\n      ))}\n    </GridContainer>\n  </MainContainer>\n);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\n\nconst breakpoints = createBreakpoints({});\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface PaletteOptions {\n    professions: {\n      frontend: {\n        main: React.CSSProperties['color'];\n      };\n      backend: {\n        main: React.CSSProperties['color'];\n      };\n      uxui: {\n        main: React.CSSProperties['color'];\n      };\n      qa: {\n        main: React.CSSProperties['color'];\n      };\n      devops: {\n        main: React.CSSProperties['color'];\n      };\n      projectmanager: {\n        main: React.CSSProperties['color'];\n      };\n    };\n  }\n}\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Segoe UI, sans-serif',\n    h1: {\n      fontSize: 40,\n      [breakpoints.down('sm')]: {\n        fontSize: 30,\n      },\n      [breakpoints.down('xs')]: {\n        fontSize: 24,\n      },\n    },\n    body1: {\n      [breakpoints.down('sm')]: {\n        fontSize: 14,\n      },\n      [breakpoints.down('xs')]: {\n        fontSize: 13,\n      },\n    },\n    subtitle1: {\n      fontSize: 30,\n    },\n    h4: {\n      fontSize: 160,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#725ec0',\n    },\n    secondary: {\n      main: '#d99cff',\n      contrastText: '#ffffff',\n    },\n    text: {\n      primary: '#222222',\n      disabled: '#22222233',\n      // Text color with opacity 30%\n    },\n    // we could add more colors later (lighter or darker)\n    professions: {\n      frontend: {\n        main: '#bee5e4',\n      },\n      backend: {\n        main: '#ff85be',\n      },\n      uxui: {\n        main: '#7ec2ff',\n      },\n      qa: {\n        main: '#fdf580',\n      },\n      devops: {\n        main: '#d99cff',\n      },\n      projectmanager: {\n        main: '#aafa87',\n      },\n    },\n  },\n});\n","import { ThemeProvider as MuiThemeProvider } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { ITProfessions } from './data/home-page/ITProfessions';\nimport { DetailPage } from './detail-page/DetailPage';\nimport { HomePage } from './home-page/HomePage';\nimport { NoMatch404 } from './layout/components/NoMatch404';\nimport { theme } from './layout/theme';\n\nconst DefaultDetailsPagePath = `/details/${ITProfessions[0].route}`;\n\nexport const App: React.FC<{}> = () => (\n  <StylesProvider injectFirst>\n    <MuiThemeProvider theme={theme}>\n      <ThemeProvider theme={theme}>\n        <Router basename={`${process.env.PUBLIC_URL}`}>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Redirect exact path=\"/details\" to={DefaultDetailsPagePath} />\n            <Route path=\"/details/:professionId\" component={DetailPage} />\n            <Route path=\"*\" component={NoMatch404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </MuiThemeProvider>\n  </StylesProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}