{"version":3,"sources":["layout/components/MainContainer.tsx","home-page/components/Header.tsx","home-page/HomePage.tsx","layout/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainContainer","styled","HeaderTypography","Typography","Header","variant","HomePage","breakpoints","createBreakpoints","theme","createMuiTheme","typography","fontFamily","h1","fontSize","down","body1","palette","primary","main","purple","secondary","green","App","StylesProvider","injectFirst","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kZAGO,IAAMA,EAAgBC,YAAO,MAAPA,CAAH,K,iLCC1B,I,IAAMC,EAAmBD,YAAOE,IAAPF,CAAH,KAQTG,EAAuB,WAClC,OACE,cAACF,EAAD,CAAkBG,QAAQ,KAA1B,uCCTSC,EAAyB,WACpC,OACE,cAACN,EAAD,UACE,cAAC,EAAD,O,mECHAO,EAAcC,IAAkB,IAEzBC,EAAQC,YAAe,CAClCC,WAAY,CACVC,WAAY,uBACZC,IAAE,GACAC,SAAU,IADV,cAECP,EAAYQ,KAAK,MAAQ,CACxBD,SAAU,KAHZ,cAKCP,EAAYQ,KAAK,MAAQ,CACxBD,SAAU,KANZ,GASFE,OAAK,mBACFT,EAAYQ,KAAK,MAAQ,CACxBD,SAAU,KAFT,cAIFP,EAAYQ,KAAK,MAAQ,CACxBD,SAAU,KALT,IASPG,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAM,SC1BLC,EAAoB,WAC/B,OACE,cAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAAC,IAAD,CAAkBhB,MAAOA,EAAzB,SACE,cAAC,IAAD,CAAeA,MAAOA,EAAtB,SACE,cAAC,EAAD,WCEKiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.724867d1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n/* Main container with background img for all pages */\nexport const MainContainer = styled('div')`\n    background: url('./img/background-img.png') center top / cover no-repeat;\n    height: 100vh;\n`;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nconst HeaderTypography = styled(Typography)`\n  width: 80%;\n  text-align: center;\n  font-weight: bold;\n  padding-top: 2em;\n  margin: auto;\n`;\n\nexport const Header: React.FC<{}> = () => {\n  return (\n    <HeaderTypography variant=\"h1\">\n      Power up your transITion\n    </HeaderTypography>\n  );\n};\n","import React from 'react';\n\nimport { MainContainer } from '../layout/components/MainContainer';\nimport { Header } from './components/Header';\n\nexport const HomePage: React.FC<{}> = () => {\n  return (\n    <MainContainer>\n      <Header />\n\n    </MainContainer>\n  );\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst breakpoints = createBreakpoints({});\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Segoe UI, sans-serif',\n    h1: {\n      fontSize: 40,\n      [breakpoints.down('sm')]: {\n        fontSize: 30,\n      },\n      [breakpoints.down('xs')]: {\n        fontSize: 24,\n      },\n    },\n    body1: {\n      [breakpoints.down('sm')]: {\n        fontSize: 14,\n      },\n      [breakpoints.down('xs')]: {\n        fontSize: 13,\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n","import { ThemeProvider as MuiThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { HomePage } from './home-page/HomePage';\nimport { theme } from './layout/theme';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <StylesProvider injectFirst>\n      <MuiThemeProvider theme={theme}>\n        <ThemeProvider theme={theme}>\n          <HomePage />\n\n        </ThemeProvider>\n      </MuiThemeProvider>\n    </StylesProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}